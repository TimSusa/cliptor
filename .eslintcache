[{"/Users/timsusa/data/development/cliptor/src/index.js":"1","/Users/timsusa/data/development/cliptor/src/providers/ReduxWrappedMuiApp.jsx":"2","/Users/timsusa/data/development/cliptor/src/global-state/configure-app-store.js":"3","/Users/timsusa/data/development/cliptor/src/providers/MuiWrappedApp.jsx":"4","/Users/timsusa/data/development/cliptor/src/global-state/index.js":"5","/Users/timsusa/data/development/cliptor/src/themes/dark-theme.js":"6","/Users/timsusa/data/development/cliptor/src/themes/light-theme.js":"7","/Users/timsusa/data/development/cliptor/src/App.jsx":"8","/Users/timsusa/data/development/cliptor/src/global-state/reducers/view-settings.js":"9","/Users/timsusa/data/development/cliptor/src/global-state/reducers/track.js":"10","/Users/timsusa/data/development/cliptor/src/global-state/reducers/content.js":"11","/Users/timsusa/data/development/cliptor/src/Clip.jsx":"12"},{"size":418,"mtime":1609160286330,"results":"13","hashOfConfig":"14"},{"size":738,"mtime":1609374315834,"results":"15","hashOfConfig":"14"},{"size":265,"mtime":1609342354248,"results":"16","hashOfConfig":"14"},{"size":932,"mtime":1609259297389,"results":"17","hashOfConfig":"14"},{"size":1896,"mtime":1609350243939,"results":"18","hashOfConfig":"14"},{"size":1462,"mtime":1609160286333,"results":"19","hashOfConfig":"14"},{"size":1147,"mtime":1609463880883,"results":"20","hashOfConfig":"14"},{"size":3584,"mtime":1609463796003,"results":"21","hashOfConfig":"14"},{"size":212,"mtime":1609342435086,"results":"22","hashOfConfig":"14"},{"size":178,"mtime":1609347929919,"results":"23","hashOfConfig":"14"},{"size":2656,"mtime":1609457965239,"results":"24","hashOfConfig":"14"},{"size":7256,"mtime":1609466436499,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"13jy2pn",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"/Users/timsusa/data/development/cliptor/src/index.js",[],[],"/Users/timsusa/data/development/cliptor/src/providers/ReduxWrappedMuiApp.jsx",[],"/Users/timsusa/data/development/cliptor/src/global-state/configure-app-store.js",[],"/Users/timsusa/data/development/cliptor/src/providers/MuiWrappedApp.jsx",[],"/Users/timsusa/data/development/cliptor/src/global-state/index.js",[],"/Users/timsusa/data/development/cliptor/src/themes/dark-theme.js",[],"/Users/timsusa/data/development/cliptor/src/themes/light-theme.js",[],"/Users/timsusa/data/development/cliptor/src/App.jsx",[],"/Users/timsusa/data/development/cliptor/src/global-state/reducers/view-settings.js",[],"/Users/timsusa/data/development/cliptor/src/global-state/reducers/track.js",[],"/Users/timsusa/data/development/cliptor/src/global-state/reducers/content.js",[],"/Users/timsusa/data/development/cliptor/src/Clip.jsx",["52","53"],"import PropTypes from 'prop-types'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport PlayIcon from '@material-ui/icons/PlayArrow'\nimport NoLoopIcon from '@material-ui/icons/ArrowRightAlt'\nimport LoopIcon from '@material-ui/icons/Loop'\nimport PauseIcon from '@material-ui/icons/Pause'\nimport MinimizeIcon from '@material-ui/icons/Minimize'\nimport MaximizeIcon from '@material-ui/icons/Maximize'\nimport WaveSurfer from 'wavesurfer.js'\nimport Slider from '@material-ui/core/Slider'\n//import Regions from 'wavesurfer.js/dist/plugin/wavesurfer.regions.min.js'\n//import Cursor from 'wavesurfer.js/dist/plugin/wavesurfer.cursor.min.js'\n\nimport { actionsContent } from './global-state'\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'column',\n    border: 'solid 1px grey',\n    borderRadius: '5px',\n    padding: 8\n  }\n}))\nexport function Clip({ url, tracksId, clipId }) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const {\n    changeClipSrc,\n    changeClipVolume,\n    toggleIsPlaying,\n    toggleIsLooping,\n    toggleIsWaveformShown\n  } = actionsContent\n  const tracks = useSelector((state) => state.content.tracks)\n  const tracksIdx = tracks.findIndex((item) => item.id === tracksId)\n  const clipIdx = tracks[tracksIdx].data.findIndex((item) => item.id === clipId)\n  const { isPlaying, isLooping, isWaveformShown, volume } = tracks[\n    tracksIdx\n  ].data[clipIdx]\n  const waveformRef = useRef(null)\n  const wavesurfer = useRef(null)\n  const [playing, setPlay] = useState(isPlaying)\n\n  // create new WaveSurfer instance\n  // On component mount and when url changes\n  useEffect(() => {\n    //setPlay(false)\n    //dispatch(toggleIsPlaying({ tracksId, clipId, isPlaying: false }))\n\n    const options = formWaveSurferOptions(waveformRef.current)\n    wavesurfer.current = WaveSurfer.create(options)\n\n    wavesurfer.current.load(url)\n\n    wavesurfer.current.on('ready', function () {\n      // https://wavesurfer-js.org/docs/methods.html\n      // wavesurfer.current.play();\n      // setPlay(true);\n      // make sure object stillavailable when file loaded\n      // if (wavesurfer.current) {\n      //   wavesurfer.current.setVolume(volume)\n      // }\n    })\n    wavesurfer.current.on('finish', () => {\n      if (isLooping) {\n        wavesurfer.current.playPause()\n      }\n    })\n    // Removes events, elements and disconnects Web Audio nodes.\n    // when component unmount\n    return () => wavesurfer.current.destroy()\n  }, [url])\n  useEffect(() => {\n    if (isPlaying) {\n      dispatch(toggleIsPlaying({ tracksId, clipId, isPlaying: true }))\n      wavesurfer.current.play()\n    } else {\n      dispatch(toggleIsPlaying({ tracksId, clipId, isPlaying: false }))\n      wavesurfer.current.stop()\n    }\n  }, [isPlaying])\n  return (\n    <div\n      className={classes.root}\n      draggable='false'\n      onDrop={(e) => {\n        let dt = e.dataTransfer\n        let files = dt.files\n        e.preventDefault()\n        dispatch(\n          changeClipSrc({\n            tracksId,\n            clipId,\n            src: files[0].path || files[0].name\n          })\n        )\n      }}\n      onDragOver={(e) => {\n        e.preventDefault()\n      }}\n      onDragEnd={(e) => {\n        e.preventDefault()\n      }}\n    >\n      <Typography style={{ whiteSpae: 'nowrap', overflow: 'hidden' }}>\n        {url.substr(url.length - 35)}\n      </Typography>\n\n      <div\n        style={{\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-evenly'\n        }}\n      >\n        <IconButton onClick={handlePlayPause} aria-label='play'>\n          {playing ? (\n            <PauseIcon style={{ width: 16 }}></PauseIcon>\n          ) : (\n            <PlayIcon style={{ width: 16 }} />\n          )}\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            dispatch(\n              toggleIsLooping({ tracksId, clipId, isLooping: !isLooping })\n            )\n          }}\n          aria-label='loop'\n        >\n          {isLooping ? (\n            <LoopIcon style={{ width: 16 }}></LoopIcon>\n          ) : (\n            <NoLoopIcon style={{ width: 16 }} />\n          )}\n        </IconButton>\n        <IconButton\n          aria-label='show waveform'\n          onClick={() => {\n            dispatch(\n              toggleIsWaveformShown({\n                tracksId,\n                clipId,\n                isWaveformShown: !isWaveformShown\n              })\n            )\n          }}\n        >\n          {isWaveformShown ? (\n            <MinimizeIcon style={{ width: 16 }} />\n          ) : (\n            <MaximizeIcon style={{ width: 16 }} />\n          )}\n        </IconButton>\n      </div>\n\n      <div\n        style={{\n          width: '100%',\n          display: isWaveformShown ? 'unset' : 'none'\n        }}\n        id='waveform'\n        ref={waveformRef}\n      />\n\n      <div style={{ width: '100%' }}>\n        <Slider\n          onChange={onVolumeChange}\n          value={volume}\n          name='volume'\n          min={0.01}\n          max={1}\n          step={0.025}\n          valueLabelDisplay='off'\n          aria-labelledby='range-slider'\n        />\n      </div>\n    </div>\n  )\n\n  function handlePlayPause() {\n    setPlay(!playing)\n    //dispatch(toggleIsPlaying({ tracksId, clipId, isPlaying: !isPlaying }))\n    wavesurfer.current.playPause()\n  }\n\n  function onVolumeChange(e, value) {\n    const newVolume = +value\n\n    if (newVolume) {\n      dispatch(changeClipVolume({ clipId, tracksId, volume: newVolume }))\n      //setVolume(newVolume)\n      wavesurfer.current.setVolume(newVolume || 1)\n    }\n  }\n}\n\nClip.propTypes = {\n  clipId: PropTypes.any,\n  tracksId: PropTypes.any,\n  url: PropTypes.any\n}\n\nfunction formWaveSurferOptions(ref) {\n  return {\n    container: ref,\n    //waveColor: '#eee',\n    // progressColor: 'OrangeRed',\n    // cursorColor: 'OrangeRed',\n    barWidth: 2,\n    barRadius: 2,\n    responsive: true,\n    height: 80,\n    // If true, normalize by the maximum peak instead of 1.0.\n    normalize: true,\n    // Use the PeakCache to improve rendering speed of large waveforms.\n    partialRender: true,\n    //backend: 'MediaElement',\n    plugins: [\n      // Cursor.create({\n      //   showTime: true,\n      //   opacity: 1,\n      //   customShowTimeStyle: {\n      //     'background-color': '#000',\n      //     color: '#fff',\n      //     padding: '2px',\n      //     'font-size': '10px'\n      //   }\n      // })\n      // Regions.create({\n      //   regionsMinLength: 1,\n      // loop: true,\n      //   // regions: [\n      //   //   {\n      //   //     start: 1,\n      //   //     end: 2,\n      //   //     loop: false,\n      //   //     color: 'hsla(400, 100%, 30%, 0.5)'\n      //   //   },\n      //   //   {\n      //   //     start: 3,\n      //   //     end: 4,\n      //   //     loop: false,\n      //   //     color: 'hsla(200, 50%, 70%, 0.4)',\n      //   //     minLength: 1\n      //   //   }\n      //   // ],\n      //   dragSelection: {\n      //     slop: 2\n      //   }\n      // })\n    ]\n  }\n}\n",{"ruleId":"54","severity":1,"message":"55","line":77,"column":6,"nodeType":"56","endLine":77,"endColumn":11,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":86,"column":6,"nodeType":"56","endLine":86,"endColumn":17,"suggestions":"59"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLooping'. Either include it or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has missing dependencies: 'clipId', 'dispatch', 'toggleIsPlaying', and 'tracksId'. Either include them or remove the dependency array.",["61"],{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [isLooping, url]",{"range":"66","text":"67"},"Update the dependencies array to be: [clipId, dispatch, isPlaying, toggleIsPlaying, tracksId]",{"range":"68","text":"69"},[2723,2728],"[isLooping, url]",[3002,3013],"[clipId, dispatch, isPlaying, toggleIsPlaying, tracksId]"]